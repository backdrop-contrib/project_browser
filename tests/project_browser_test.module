<?php

/**
 * Implements hook_menu().
 */
function project_browser_test_menu() {
  $items['project_browser_test/query'] = array(
    'title' => 'Test Query page',
    'description' => "Tests the ability to fetch and display projects, and filter them appropriately.",
    'page callback' => 'project_browser_test_query',
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
  );
  return $items;
}

/**
 * Page callback. Generates json based on the input filters
 */
function project_browser_test_query() {
  if (!isset($_GET['method'])) {
    print backdrop_json_encode(t('You must specify a method.'));
    exit();
  }
  switch ($_GET['method']) {
    case 'categories':
      if (!isset($_GET['type'])) {
        print backdrop_json_encode(t('You must specify a project type.'));
        exit();
      }
      
      $categories['project_browser_test'] = project_browser_test_get_categories($_GET['type']);
      
      print backdrop_json_encode($categories);
      exit();
    
    case 'query':
      // Check that we have valid data
      if (!isset($_GET['backdrop_version'])) {
        print backdrop_json_encode(t('You must specify a backdrop version.'));
        exit();
      }
      if (!isset($_GET['type'])) {
        print backdrop_json_encode(t('You must specify a project type.'));
        exit();
      }
      
      // Get the filters
      $filters = array(
        'backdrop_version' => $_GET['backdrop_version'],
        'type' => $_GET['type'],
        'text' => (isset($_GET['text']) AND $_GET['text']) ? $_GET['text'] : '',
        'sort_method' => isset($_GET['sort_method']) ? $_GET['sort_method'] : 'usage',
        'sort_direction' => isset($_GET['sort_direction']) ? $_GET['sort_direction'] : 'desc',
        'items_per_page' => isset($_GET['items_per_page']) ? (int) $_GET['items_per_page'] : 12,
        'page' => isset($_GET['page']) ? (int) $_GET['page'] : 0,
      );
      
      if (isset($_GET['categories'])) {
        $categories = unserialize($_GET['categories']);
        if (is_array($categories) AND !empty($categories)) {
          $filters['categories'] = $categories;
        }
      }
      
      // Pass them off to the project_browser_server_get_results() function
      $results = project_browser_test_get_results($filters);
      
      print backdrop_json_encode($results);
      
      exit();
  }
}

/**
 * Returns some static categories
 */
function project_browser_test_get_categories($type) {
  $categories = array();
  
  switch ($type) {
    case 'module':
      $categories = array(
        'admin' => "Administrative",
        'search' => "Search",
        'user_management' => "User Management",
      );
      break;
      
    case 'theme':
      $categories = array(
        'dark' => "Dark",
        'light' => "Light",
      );
  }

  return $categories;
}

/**
 * Returns projects based on the filters
 */
function project_browser_test_get_results($filters) {
  $projects = project_browser_test_projects();
  
  $results = array(
    'total' => count($projects),
    'projects' => array(),
  );
  
  // Filter out projects based on type
  if (isset($filters['type']) AND $type = $filters['type']) {
    foreach ($projects as $name => $project) {
      if ($type != $project['type']) {
        unset($projects[$name]);
      }
    }
  }
  
  // Filter out projects based on backdrop version number
  if (isset($filters['backdrop_version']) AND $version = $filters['backdrop_version']) {
    foreach ($projects as $name => $project) {
      if ($version != $project['backdrop version']) {
        unset($projects[$name]);
      }
    }
  }
  
  // Filter out projects based on categories number
  if (isset($filters['categories']) AND is_array($filters['categories']) AND !empty($filters['categories'])) {
    $filtered = array();
    foreach ($projects as $name => $project) {
      foreach ($project['categories'] as $category) {
        if (in_array($category, $filters['categories'])) {
          $filtered[$name] = $project;
        }
      }
    }
    $projects = $filtered;
  }

  // Filter out projects based on the text query
  if (isset($filters['text']) AND $text = $filters['text']) {
    foreach ($projects as $name => $project) {
      if (!stristr($project['title'], $text) AND !stristr($project['description'], $text)) {
        unset($projects[$name]);
      }
    }
  }
  
  $results['total'] = count($projects);
  
  // Only send back the requested amount
  $start = $filters['page'] * $filters['items_per_page'];
  $end = $start + $filters['items_per_page'];
  
  $results['projects'] = $projects;
  
  return $results;
}

/**
 * Returns some static projects
 */
function project_browser_test_projects() {
  $projects = array();
  
  $projects['views'] = array(
    'type' => 'module',
    'title' => 'Views',
    'name' => 'views',
    'backdrop version' => 7,
    'author' => 'merlinofchaos',
    'description' => "The Views module provides a flexible method for Backdrop site 
      designers to control how lists and tables of content (nodes in Views 1, almost 
      anything in Views 2) are presented. Traditionally, Backdrop has hard-coded most of 
      this, particularly in how taxonomy and tracker lists are formatted. ",
    'backdrop_versions' => array(6, 7),
    'categories' => array('admin', 'search'),
    'image' => 'http://learnbythedrop.com/system/files/images/View-Edit_0.png',
    'usage' => '542312',
    'project url' => 'http://www.<MAINSITE_URL>/projects/views',
    'project status url' => 'http://updates.<MAINSITE_URL>/release-history/views/7.x',
    'last updated' => '12342523',
    'maintenance status' => 'Actively maintained',
    'development status' => 'Under active development',
    'rating' => '9.6',
    'dependencies' => array(
      'ctools',
    ),
  );
  
  $projects['ctools_test'] = array(
    'type' => 'module',
    'title' => 'CTools Test',
    'name' => 'ctools_test',
    'backdrop version' => 7,
    'author' => 'merlinofchaos',
    'description' => "This suite is primarily a set of APIs and tools to improve 
      the developer experience. It also contains a module called the Page Manager 
      whose job is to manage pages. In particular it manages panel pages, but as 
      it grows it will be able to manage far more than just Panels.",
    'backdrop_versions' => array(6, 7),
    'categories' => array(),
    'image' => '',
    'usage' => '4312',
    'project url' => 'http://www.<MAINSITE_URL>/projects/ctools',
    'project status url' => 'http://updates.<MAINSITE_URL>/release-history/ctools/7.x',
    'last updated' => '12354634',
    'maintenance status' => 'Actively maintained',
    'development status' => 'Under active development',
    'rating' => '7.6',
    'dependencies' => array(),
  );
  
  $projects['ctools'] = array(
    'type' => 'module',
    'title' => 'Chaos Tool Suite',
    'name' => 'ctools',
    'backdrop version' => 7,
    'author' => 'merlinofchaos',
    'description' => "This suite is primarily a set of APIs and tools to improve 
      the developer experience. It also contains a module called the Page Manager 
      whose job is to manage pages. In particular it manages panel pages, but as 
      it grows it will be able to manage far more than just Panels.",
    'backdrop_versions' => array(6, 7),
    'categories' => array(),
    'image' => '',
    'usage' => '4312',
    'project url' => 'http://www.<MAINSITE_URL>/projects/ctools',
    'project status url' => 'http://updates.<MAINSITE_URL>/release-history/ctools/7.x',
    'last updated' => '12354634',
    'maintenance status' => 'Actively maintained',
    'development status' => 'Under active development',
    'rating' => '7.6',
    'dependencies' => array(),
  );
  
  $projects['token'] = array(
    'type' => 'module',
    'title' => 'Token',
    'name' => 'token',
    'backdrop version' => 7,
    'author' => 'eaton',
    'description' => "Tokens are small bits of text that can be placed into larger 
      documents via simple placeholders, like %site-name or [user]. The Token module 
      provides a central API for modules to use these tokens, and expose their own token values.",
    'categories' => array('admin'),
    'image' => 'http://<MAINSITE_URL>/files/images/token_08.thumbnail.png',
    'usage' => '4563',
    'project url' => 'http://www.<MAINSITE_URL>/projects/token',
    'project status url' => 'http://updates.<MAINSITE_URL>/release-history/token/7.x',
    'last updated' => '12357351',
    'maintenance status' => 'Actively maintained',
    'development status' => 'Under active development',
    'rating' => '8.1',
    'dependencies' => array(),
  );
  
  $projects['zen'] = array(
    'type' => 'theme',
    'title' => 'Zen',
    'name' => 'zen',
    'backdrop version' => 7,
    'author' => 'johnAlbin',
    'description' => "Zen is the ultimate starting theme for Backdrop. If you are 
      building your own standards-compliant theme, you will find it much easier to 
      start with Zen than to start with Garland or Bluemarine. This theme has fantastic 
      online documentation and tons of code comments for both the PHP (template.php) 
      and HTML (page.tpl.php, node.tpl.php).",
    'categories' => array('light', 'dark'),
    'image' => 'http://<MAINSITE_URL>/files/images/zen-logo.thumbnail.png',
    'usage' => '4563',
    'project url' => 'http://www.<MAINSITE_URL>/project/zen',
    'project status url' => 'http://updates.<MAINSITE_URL>/release-history/zen/7.x',
    'last updated' => '12343634',
    'maintenance status' => 'Actively maintained',
    'development status' => 'Under active development',
    'rating' => '7.1',
    'dependencies' => array(),
  );
  
  $projects['acquia_marina'] = array(
    'type' => 'theme',
    'title' => 'Acquia Marina',
    'name' => 'acquia_marina',
    'backdrop version' => 7,
    'author' => 'stephthegeek',
    'description' => "The Fusion base theme and Skinr are required. Skinr for Backdrop 7 
      (dev release) is usable now but it is recommended that you proceed with caution 
      and do some of your own testing.",
    'categories' => array('light'),
    'image' => 'http://<MAINSITE_URL>/files/images/acquia_marina.thumbnail.png',
    'usage' => '14563',
    'project url' => 'http://www.<MAINSITE_URL>/project/acquia_marina',
    'project status url' => 'http://updates.<MAINSITE_URL>/release-history/acquia_marina/7.x',
    'last updated' => '12346574',
    'maintenance status' => 'Actively maintained',
    'development status' => 'Under active development',
    'rating' => '7.8',
    'dependencies' => array(
      'fusion'
    ),
  );
  
  $projects['fusion'] = array(
    'type' => 'theme',
    'title' => 'Fusion',
    'name' => 'fusion',
    'backdrop version' => 7,
    'author' => 'stephthegeek',
    'description' => "Fusion is a powerful base theme, with layout and style configuration 
      options built in that you can control through Backdrop's UI. It's based on a simplified 
      960px or fluid 12/16-column grid. It's designed to be used with the Skinr module, 
      with numerous useful block styles included.",
    'categories' => array('light'),
    'image' => 'http://<MAINSITE_URL>/files/images/fusion-powering-small-banner.thumbnail.png',
    'usage' => '14563',
    'project url' => 'http://www.<MAINSITE_URL>/project/fusion',
    'project status url' => 'http://updates.<MAINSITE_URL>/release-history/fusion/7.x',
    'last updated' => '12342643',
    'maintenance status' => 'Actively maintained',
    'development status' => 'Under active development',
    'rating' => '',
    'dependencies' => array(),
  );
  
  return $projects;
}
